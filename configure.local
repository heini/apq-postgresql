#!/usr/bin/env bash
# 
# Local configuration file for APQ.PostgreSQL




################
# Project Name #
################

project="apq-postgresql"




###################
# Standard Checks #
###################
check_project apq


check_in_path sed
check_in_path grep





########################################
# PostgreSQL Compiler and Linker Flags #
########################################


if [[ "$OS" = "Windows_NT" ]]
then
	if [[ "${POSTGRESQL_PATH}" = "" ]]
	then
		echo "Please set the POSTGRESQL_PATH environment variable pointing to your MySQL installment";
		exit -1;
	fi
	POSTGRESQL_CFLAGS=-I "${POSTGRESQL_PATH}\include" -I./ -D_WINDOWS -D__LCC__
	POSTGRESQL_LIBS="-L${POSTGRESQL_PATH}\lib -lpq"
	POSTGRESQL_INCLUDE_PATH="${POSTGRESQL_PATH}\include"
else
	check_in_path pg_config
	POSTGRESQL_LIBDIR=`pg_config --libdir`
	POSTGRESQL_LIBS="-L${POSTGRESQL_LIBDIR} -lpq"
	POSTGRESQL_INCLUDE_PATH=`pg_config --includedir`
	POSTGRESQL_CFLAGS="`pg_config --cflags` -I${POSTGRESQL_INCLUDE_PATH}"
fi



#################################
# apq-postgresql.ads Generation #
#################################

get_linker_options(){
	for i in $POSTGRESQL_LIBS
	do
		echo "	pragma Linker_Options( \"$i\" );";
	done;
}





if [[ -f src/apq-postgresql.ads ]]
then
	echo "apq-postgresql.ads exists";
else

	echo "Generating src/apq-postgresql.ads";
	cp "src-in/apq-postgresql.ads.in" "src/apq-postgresql.ads";

	linker_options=`get_linker_options`
	echo "$linker_options"
	replace_in_file src/apq-postgresql.ads "%POSTGRESQL_LIBS%" "$linker_options"
fi


mkdir -p gnat
GPR="gnat/apq-postgresql.gpr.in";
cp "src-in/apq-postgresql.gpr.in" $GPR

list=`sedfy_gpr_list "$POSTGRESQL_CFLAGS"` 
replace_in_file "$GPR" "%POSTGRESQL_CFLAGS%" "$list"



set_configuration APQPOSTGRESQL_EXTERNALLY_BUILT "false"
